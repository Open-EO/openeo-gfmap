[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
  "/dist",
  "/notebooks",
  "/scripts",
  "/bin",
  "/tests",
]

[project]
name = "openeo_gfmap"
version = "0.2.0"
authors = [
  { name="Darius Couchard" },
  { name="Vincent Verelst" },
  { name="Kristof Van Tricht" },
  { name="Stefaan Lippens" },
  { name="Jeroen Degerickx" },
]
description = "OpenEO General Framework for Mapping"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy<2.0.0",
    "geojson>=3.0.0",
    "geopandas",
    "h5netcdf>=1.2.0",
    "openeo",
    "onnxruntime",
    "cftime",
    "pyarrow",
    "fastparquet",
    "h3",
    "netCDF4",
    "scipy",
    "rasterio",
]

[project.urls]
"Homepage" = "https://github.com/Open-EO/openeo-gfmap"
"Bug Tracker" = "https://github.com/Open-EO/openeo-gfmap/issues"

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "matplotlib>=3.3.0",
  "xarray>=2022.3.0",
  "rioxarray>=0.13.0",
  "pytest-depends",
  "pytest-timeout>=2.2.0",
  "pre-commit",
]

[tool.pytest.ini_options]
testpaths = [
  "tests",
]
addopts = [
  "--verbose",
  "--import-mode=prepend",
  "--log-cli-level=INFO",
  "--timeout=900",
]
junit_logging = "log"  # Include logging output in JUnit XML report


[tool.isort]
profile = "black"


[tool.black]
line-length = 88


[tool.ruff]
# line-length = 88

[tool.ruff.lint]
select = ["E", "F"]
ignore = [
  "E501",  # Ignore "line-too-long" issues, let black handle that.
]

